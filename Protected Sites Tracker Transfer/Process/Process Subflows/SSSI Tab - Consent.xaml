<Activity mc:Ignorable="sap sap2010" x:Class="SSSI_Tab___Consent" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_swProcessingTimer" Type="InOutArgument(sd:Stopwatch)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_intSSSICounter" Type="InArgument(x:Int32)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1254,4504.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>Pop_Ups</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>Pop Ups</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Configuration.Install</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1248.4,4439.6" sap2010:WorkflowViewState.IdRef="Sequence_63">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Edge" DisplayName="Attach Browser - CWT" sap:VirtualizedContainerService.HintSize="1186.4,4328.4" sap2010:WorkflowViewState.IdRef="BrowserScope_10" InformativeScreenshot="49fd57bbd8a464bc574f3cca4ffc1657" Selector="&lt;html app='msedge.exe' title='Natural England*' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1152.4,4181.6" sap2010:WorkflowViewState.IdRef="Sequence_62">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strUnits" />
              <Variable x:TypeArguments="x:String" Name="strSSSIName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:SelectItem AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item - Consent" sap:VirtualizedContainerService.HintSize="1090.4,156" sap2010:WorkflowViewState.IdRef="SelectItem_24" Item="SSSI S28E Consent">
              <ui:SelectItem.Items>
                <scg:List x:TypeArguments="x:String" Capacity="8">
                  <x:String>Â </x:String>
                  <x:String>SSSI CS Consenting</x:String>
                  <x:String>SSSI S28E Consent</x:String>
                  <x:String>SSSI S28F Appeal</x:String>
                  <x:String>SSSI S28H Assent</x:String>
                  <x:String>SSSI S28I Advice</x:String>
                </scg:List>
              </ui:SelectItem.Items>
              <ui:SelectItem.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="81ec7b6a-d5de-4e1a-b997-4c6366857a6d" InformativeScreenshot="22b1b604f6353832080f3e36178bfe46" Selector="&lt;webctrl id='SSSIConsultation*_consultation_theme' tag='SELECT' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SelectItem.Target>
            </ui:SelectItem>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Submit - SSSI page" sap:VirtualizedContainerService.HintSize="1090.4,106.8" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b5f77fa4-1022-452b-bc95-4af0b6939471" InformativeScreenshot="93a6f278136f9c255751586b22e45e9d" Selector="&lt;webctrl idx='1' tag='INPUT' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <If Condition="[in_intSSSICounter=1]" DisplayName="If SSSI Counter is 1" sap:VirtualizedContainerService.HintSize="1090.4,598.8" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Then>
                <Assign DisplayName="Assign SSSI Name" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSSSIName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("SSSI_x0020_Sie_x0020_Name").tostring]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="496,438.4" sap2010:WorkflowViewState.IdRef="Sequence_68">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Set SSSI name as Additional SSSI name, remove numbers and #" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strSSSIName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[system.text.RegularExpressions.Regex.Replace(in_TransactionItem("Additional_x0020_SSSI_x0020_Site0").tostring.trim,"[0-9#]","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Replace ;; with ;" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strSSSIName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[system.text.RegularExpressions.Regex.Replace(strSSSIName.trim,";;",";")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get correct instance of additional SSSI" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strSSSIName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strSSSIName.split(";"c)(in_intSSSICounter-2)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type In SSSI Name" sap:VirtualizedContainerService.HintSize="1090.4,156" sap2010:WorkflowViewState.IdRef="TypeInto_1" SimulateType="True" Text="[strSSSIName]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b4feee5c-579b-42f5-a688-a199eb028135" InformativeScreenshot="c1ef939ec9861823bb0054d5e9f718c3" Selector="&lt;webctrl id='TBSSSIConsultation*_SSSI_name' tag='INPUT' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click SSSI Name" sap:VirtualizedContainerService.HintSize="1090.4,106.8" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="73c02395-d86c-4eec-bb6e-3b5b8289fce2" InformativeScreenshot="9d92c9ba237677e4f521b76503f266a2" Selector="[string.Format(&quot;&lt;webctrl id='SSSIConsultation*_SSSI_name' tag='SELECT' /&gt;&lt;webctrl aaname='{0}* ' tag='OPTION' /&gt;&quot;, strSSSIName)]">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <If Condition="[in_TransactionItem(&quot;Unit_x0020_No.&quot;).tostring.tolower.contains(&quot;all&quot;)]" DisplayName="If Unit No contains 'all'" sap:VirtualizedContainerService.HintSize="1090.4,242.8" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Assign DisplayName="Set strUnits to All" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">All</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Set strUnits to TBC" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["TBC"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <If Condition="[in_TransactionItem(&quot;Unit_x0020_No.&quot;).tostring.tolower.contains(&quot;n/a&quot;) or in_TransactionItem(&quot;Unit_x0020_No.&quot;).tostring.tolower=&quot;na&quot; or in_TransactionItem(&quot;Unit_x0020_No.&quot;).tostring=Nothing]" DisplayName="If Unit No is N/A or alternatives, or nothing" sap:VirtualizedContainerService.HintSize="1090.4,242.8" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Assign DisplayName="Set strUnits to None" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">None</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Set strUnits to TBC" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["TBC"]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <If Condition="[system.text.regularexpressions.regex.ismatch(in_TransactionItem(&quot;Unit_x0020_No.&quot;).tostring,&quot;[^0-9,;\s]&quot;)=True and strUnits=&quot;TBC&quot;]" DisplayName="If Unit No contains other than 0-9, ',', ';', N/A, or All" sap:VirtualizedContainerService.HintSize="1090.4,1146.4" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="550,986" sap2010:WorkflowViewState.IdRef="Sequence_65">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Boolean" Name="booDis" />
                    <Variable x:TypeArguments="x:String" Name="Output" />
                    <Variable x:TypeArguments="x:String" Name="strButtonSelected" />
                    <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="JObject" />
                    <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="JObject2" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <InvokeMethod DisplayName="Stop Stopwatch" sap:VirtualizedContainerService.HintSize="488,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Stop">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                    </InvokeMethod.TargetObject>
                  </InvokeMethod>
                  <ufa:FormActivity CreateFormActivityFileName="{x:Null}" CreateFormActivityFilePath="{x:Null}" FormFieldsInputData="{x:Null}" IconPath="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" CreateFormId="d054d192-b5e9-4d01-bffd-029b4eb729a3" DevTools="False" DisableMaximizeButton="False" DisableMinimizeButton="False" DisableSanitize="False" Dismissed="[booDis]" DisplayName="Create Form - Unit Numbers" EnableAccessibility="False" FormFieldsOutputData="[Output]" FormHeight="375" FormSchema="%[{&quot;label&quot;:&quot;HTML&quot;,&quot;attrs&quot;:[{&quot;attr&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;content&quot;:&quot;{{data.PopupMessage}}&quot;,&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;html&quot;,&quot;type&quot;:&quot;htmlelement&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false},{&quot;label&quot;:&quot;SSSI Unit Numbers&quot;,&quot;showCharCount&quot;:true,&quot;tableView&quot;:true,&quot;key&quot;:&quot;strUnits&quot;,&quot;type&quot;:&quot;textarea&quot;,&quot;rows&quot;:7,&quot;input&quot;:true},{&quot;label&quot;:&quot;Container&quot;,&quot;customClass&quot;:&quot;box_continue button-row&quot;,&quot;key&quot;:&quot;container1&quot;,&quot;type&quot;:&quot;container&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Stop&quot;,&quot;theme&quot;:&quot;danger&quot;,&quot;leftIcon&quot;:&quot;fa fa-close&quot;,&quot;customClass&quot;:&quot;btn btn-group&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;no&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;isResetData&quot;:false},{&quot;label&quot;:&quot;Continue&quot;,&quot;theme&quot;:&quot;success&quot;,&quot;leftIcon&quot;:&quot;fa fa-check&quot;,&quot;customClass&quot;:&quot;btn btn-group&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;continue&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;isResetData&quot;:false}]}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;1697632758623&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;BaseCss&quot;:&quot;./assets/css/themes/uipath.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;./assets/themeicons/uipath.png&quot;,&quot;OverrideCssUrl&quot;:&quot;./assets/css/themes/uipath.custom.css&quot;,&quot;UserStyleOverrides&quot;:&quot;body , h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {\n                      font-family : Calibri !important;\n                    }table, .btn, .form-control {\n                      font-size : 20px !important;\n                     }h1 {\n                      font-size : 42px !important;\n                    }h2 {\n                      font-size : 36px !important;\n                    }h3 {\n                      font-size : 30px !important;\n                    }h4 {\n                      font-size : 24px !important;\n                    }h5 {\n                      font-size : 20px !important;\n                    }h6 {\n                      font-size : 18px !important;\n                    }body {\n      background:  #ffffff !important;\n      font-size : 20px !important;\n      font-family : Calibri !important;\n      color : #000000 !important\n    } .panel-default {\n                        background:   !important;\n                        border-color :   !important;\n                      }\n                 .panel-default &gt; .panel-heading {\n                        background-color:  !important;\n                        color : #000000 !important\n                      }.btn-primary {\n                          background:   !important;\n                          border-color:   !important;\n                          color:   !important;\n                      } .btn-primary:hover {\n                          background:   !important;\n                          color:   !important;\n                      } .btn-default {\n                        background:   !important;\n                        border-color:   !important;\n                        color:   !important;\n                      } .btn-default:hover {\n                        background:   !important;\n                        color:   !important;\n                      } &quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:true,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormTitle="Check Unit Numbers" FormWidth="800" GenerateInputFields="False" sap:VirtualizedContainerService.HintSize="488,231.2" sap2010:WorkflowViewState.IdRef="FormActivity_1" IsReadOnly="False" LocalCSSFilePath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\FULLCSS.css&quot;]" MaxColumnsForSchemaGeneration="2" RunDoBlockFirst="False" RunInIsolatedMode="True" SelectedButton="[strButtonSelected]" StartAsMinimized="False">
                    <ufa:FormActivity.Body>
                      <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,104.4" sap2010:WorkflowViewState.IdRef="Sequence_66">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </ActivityAction>
                    </ufa:FormActivity.Body>
                    <ufa:FormActivity.DelayBody>
                      <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                        <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_1" />
                      </ActivityAction>
                    </ufa:FormActivity.DelayBody>
                    <ufa:FormActivity.FormFieldsCollection>
                      <InArgument x:TypeArguments="x:String" x:Key="PopupMessage">["Non-numeric SSSI unit number detected. Please complete amend the unit number, seperating each with a semicolon (&lt;b&gt;;&lt;/b&gt;).&lt;p&gt;If all units are required please enter &lt;b&gt;'All'&lt;/b&gt;&lt;p&gt;If no units are required please enter &lt;b&gt;'None'&lt;/b&gt;&lt;p&gt;&lt;b&gt;Desciption: &lt;/b&gt;"+in_TransactionItem("Description").tostring+"&lt;p&gt;&lt;b&gt;Key Notes: &lt;/b&gt;&lt;/b&gt;"+in_TransactionItem("Key_x0020_Notes").tostring+"&lt;br&gt;&lt;br&gt;"]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="strUnits">[strUnits]</InOutArgument>
                    </ufa:FormActivity.FormFieldsCollection>
                  </ufa:FormActivity>
                  <InvokeMethod DisplayName="Start Stopwatch" sap:VirtualizedContainerService.HintSize="488,136.4" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Start">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="sd:Stopwatch">[io_swProcessingTimer]</InArgument>
                    </InvokeMethod.TargetObject>
                  </InvokeMethod>
                  <If Condition="[strButtonSelected= &quot;no&quot; or booDis]" DisplayName="If dismissed:" sap:VirtualizedContainerService.HintSize="488,250.8" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Then>
                      <Throw DisplayName="Throw Business Exception" Exception="[new BusinessRuleException(&quot;Stop button selected on unit number amendment.&quot;)]" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="Throw_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Throw>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="496,438.4" sap2010:WorkflowViewState.IdRef="Sequence_64">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Replace Whitespace" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[system.text.RegularExpressions.Regex.Replace(in_TransactionItem("Unit_x0020_No.").tostring,("\s"),";")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Replace &quot;,&quot;" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[system.text.RegularExpressions.Regex.Replace(in_TransactionItem("Unit_x0020_No.").tostring,(","),";")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Replace ;;" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strUnits]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[system.text.RegularExpressions.Regex.Replace(in_TransactionItem("Unit_x0020_No.").tostring,(";;"),";")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[in_intSSSICounter=1 and not strUnits=&quot;All&quot; and Not strUnits=&quot;None&quot;]" DisplayName="If first SSSI" sap:VirtualizedContainerService.HintSize="1090.4,656.4" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each Item in strUnits" sap:VirtualizedContainerService.HintSize="531.6,465.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[strUnits.split(&quot;;&quot;c)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="496,340.4" sap2010:WorkflowViewState.IdRef="Sequence_67">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strUnitNumber" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign first unit number" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strUnitNumber]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[item.ToString.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Option with Number" sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="Ctrl" MouseButton="BTN_LEFT" SimulateClick="True">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="376d43b2-0957-4e33-b74d-a4f6f9d6e9d3" InformativeScreenshot="515aae2e0b0cdd772049660dad6d2662" Selector="[string.Format(&quot;&lt;webctrl id='SSSIConsultation*_SSSI_units' tag='SELECT' /&gt;&lt;webctrl aaname='{0} *' tag='OPTION' /&gt;&quot;, strUnitNumber)]">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:Click.Target>
                        </ui:Click>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_70">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[strUnits=&quot;All&quot;]" DisplayName="If all untis are needed:" sap:VirtualizedContainerService.HintSize="1090.4,297.6" sap2010:WorkflowViewState.IdRef="If_11">
              <If.Then>
                <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'Select all units'" sap:VirtualizedContainerService.HintSize="334,106.8" sap2010:WorkflowViewState.IdRef="Check_1">
                  <ui:Check.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ff714a35-24da-4645-b40d-da2b1e6305e0" InformativeScreenshot="a6ad800202f98676d799a3151ba4b0f5" Selector="&lt;webctrl id='ctrl_SSSIConsultation*_select_all_units' tag='INPUT' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Check.Target>
                </ui:Check>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_71">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
  </Sequence>
</Activity>