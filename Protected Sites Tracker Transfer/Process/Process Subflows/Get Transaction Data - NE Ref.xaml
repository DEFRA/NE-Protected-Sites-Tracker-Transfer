<Activity mc:Ignorable="sap sap2010" x:Class="Get_Transaction_Data___NE_Ref" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:da="clr-namespace:DRACOE_Microsoft_Graph.Authentication;assembly=DRACOE Microsoft Graph" xmlns:ds="clr-namespace:DRACOE_Microsoft_Graph.SharePoint;assembly=DRACOE Microsoft Graph" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ufa="clr-namespace:UiPath.Form.Activities;assembly=UiPath.Form.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="strButtonSelected" Type="OutArgument(x:String)" />
    <x:Property Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_TransactionItem" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_datExtractedItems" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1124,4575.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Logging</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>System.Security</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Lists</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>DRACOE_Microsoft_Graph.Authentication</x:String>
      <x:String>DRACOE_Microsoft_Graph.SharePoint</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Logging</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.Install</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>DRACOE Microsoft Graph</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1134,4510" sap2010:WorkflowViewState.IdRef="Sequence_96">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="Output" />
      <Variable x:TypeArguments="x:String" Name="strNERefNo" />
      <Variable x:TypeArguments="x:Boolean" Name="booDis" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Initialise Transaction Item" sap:VirtualizedContainerService.HintSize="1072,82.4" sap2010:WorkflowViewState.IdRef="Assign_116">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_TransactionItem]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new dictionary (of string, object)]</InArgument>
      </Assign.Value>
    </Assign>
    <ufa:FormActivity CreateFormActivityFileName="{x:Null}" CreateFormActivityFilePath="{x:Null}" FormFieldsInputData="{x:Null}" IconPath="{x:Null}" TimeoutInSeconds="{x:Null}" WindowPositionLeft="{x:Null}" WindowPositionTop="{x:Null}" CreateFormId="d054d192-b5e9-4d01-bffd-029b4eb729a3" DevTools="False" DisableMaximizeButton="False" DisableMinimizeButton="False" DisableSanitize="False" Dismissed="[booDis]" DisplayName="Create Form - Input NE Ref No" EnableAccessibility="False" FormFieldsOutputData="[Output]" FormHeight="300" FormSchema="%[{&quot;label&quot;:&quot;HTML&quot;,&quot;attrs&quot;:[{&quot;attr&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;content&quot;:&quot;{{data.PopupMessage}}&quot;,&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;html&quot;,&quot;type&quot;:&quot;htmlelement&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false},{&quot;label&quot;:&quot;NE Ref Number&quot;,&quot;tableView&quot;:true,&quot;key&quot;:&quot;strNERefNo&quot;,&quot;type&quot;:&quot;textfield&quot;,&quot;input&quot;:true},{&quot;label&quot;:&quot;Container&quot;,&quot;key&quot;:&quot;container&quot;,&quot;type&quot;:&quot;container&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;HTML&quot;,&quot;attrs&quot;:[{&quot;attr&quot;:&quot;&quot;,&quot;value&quot;:&quot;&quot;}],&quot;content&quot;:&quot;{{data.Spacer}}&quot;,&quot;refreshOnChange&quot;:true,&quot;key&quot;:&quot;html1&quot;,&quot;type&quot;:&quot;htmlelement&quot;,&quot;input&quot;:false,&quot;tableView&quot;:false}]},{&quot;label&quot;:&quot;Container&quot;,&quot;customClass&quot;:&quot;box_continue button-row&quot;,&quot;key&quot;:&quot;container1&quot;,&quot;type&quot;:&quot;container&quot;,&quot;input&quot;:true,&quot;tableView&quot;:false,&quot;components&quot;:[{&quot;label&quot;:&quot;Stop&quot;,&quot;theme&quot;:&quot;danger&quot;,&quot;leftIcon&quot;:&quot;fa fa-close&quot;,&quot;customClass&quot;:&quot;btn btn-group&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;no&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;isResetData&quot;:false},{&quot;label&quot;:&quot;Continue&quot;,&quot;theme&quot;:&quot;success&quot;,&quot;leftIcon&quot;:&quot;fa fa-check&quot;,&quot;customClass&quot;:&quot;btn btn-group&quot;,&quot;tableView&quot;:false,&quot;key&quot;:&quot;continue&quot;,&quot;custom&quot;:&quot;instance.emit('executeDoBlock', instance.component);&quot;,&quot;input&quot;:true,&quot;type&quot;:&quot;button&quot;,&quot;isResetData&quot;:false}]}]" FormTheme="{}{&quot;Activities&quot;:[&quot;FORMS&quot;],&quot;Id&quot;:&quot;1697632758623&quot;,&quot;Name&quot;:&quot;Custom&quot;,&quot;BaseCss&quot;:&quot;./assets/css/themes/uipath.bootstrap.min.css&quot;,&quot;ImageSrc&quot;:&quot;./assets/themeicons/uipath.png&quot;,&quot;OverrideCssUrl&quot;:&quot;./assets/css/themes/uipath.custom.css&quot;,&quot;UserStyleOverrides&quot;:&quot;body , h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {\n                      font-family : Calibri !important;\n                    }table, .btn, .form-control {\n                      font-size : 20px !important;\n                     }h1 {\n                      font-size : 42px !important;\n                    }h2 {\n                      font-size : 36px !important;\n                    }h3 {\n                      font-size : 30px !important;\n                    }h4 {\n                      font-size : 24px !important;\n                    }h5 {\n                      font-size : 20px !important;\n                    }h6 {\n                      font-size : 18px !important;\n                    }body {\n      background:  #ffffff !important;\n      font-size : 20px !important;\n      font-family : Calibri !important;\n      color : #000000 !important\n    } .panel-default {\n                        background:   !important;\n                        border-color :   !important;\n                      }\n                 .panel-default &gt; .panel-heading {\n                        background-color:  !important;\n                        color : #000000 !important\n                      }.btn-primary {\n                          background:   !important;\n                          border-color:   !important;\n                          color:   !important;\n                      } .btn-primary:hover {\n                          background:   !important;\n                          color:   !important;\n                      } .btn-default {\n                        background:   !important;\n                        border-color:   !important;\n                        color:   !important;\n                      } .btn-default:hover {\n                        background:   !important;\n                        color:   !important;\n                      } &quot;,&quot;Properties&quot;:&quot;&quot;,&quot;IsCustomTheme&quot;:true,&quot;Version&quot;:1,&quot;ThemeVersion&quot;:1}" FormTitle="Reference Number Input" FormWidth="500" GenerateInputFields="False" sap:VirtualizedContainerService.HintSize="1072,231.2" sap2010:WorkflowViewState.IdRef="FormActivity_3" IsReadOnly="False" LocalCSSFilePath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\FULLCSS.css&quot;]" MaxColumnsForSchemaGeneration="2" RunDoBlockFirst="False" RunInIsolatedMode="True" SelectedButton="[strButtonSelected]" StartAsMinimized="False">
      <ufa:FormActivity.Body>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,104.4" sap2010:WorkflowViewState.IdRef="Sequence_94">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </ActivityAction>
      </ufa:FormActivity.Body>
      <ufa:FormActivity.DelayBody>
        <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:Object)">
          <Delay Duration="00:00:00.2500000" sap2010:WorkflowViewState.IdRef="Delay_3" />
        </ActivityAction>
      </ufa:FormActivity.DelayBody>
      <ufa:FormActivity.FormFieldsCollection>
        <InArgument x:TypeArguments="x:String" x:Key="PopupMessage">&lt;b&gt;Please input the NE Reference Number for the item you wish to process.&lt;/b&gt;&lt;/br&gt;&lt;/br&gt;</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="strNERefNo">[strNERefNo]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Spacer">&lt;/br&gt;&lt;/br&gt;</InArgument>
      </ufa:FormActivity.FormFieldsCollection>
    </ufa:FormActivity>
    <If Condition="[strButtonSelected= &quot;no&quot; or booDis]" DisplayName="If dismissed:" sap:VirtualizedContainerService.HintSize="1072,252" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Throw DisplayName="Throw Business Exception" Exception="[new BusinessRuleException(&quot;Stop button selected on NE Ref&quot;)]" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="Throw_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Throw>
      </If.Then>
    </If>
    <Assign DisplayName="Trim Ref" sap:VirtualizedContainerService.HintSize="1072,82.4" sap2010:WorkflowViewState.IdRef="Assign_111">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strNERefNo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[strNERefNo.trim]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[strButtonSelected= &quot;no&quot; or booDis]" DisplayName="If dismissed:" sap:VirtualizedContainerService.HintSize="1072,252" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Throw DisplayName="Throw Business Exception" Exception="[new BusinessRuleException(&quot;Stop button selected on NE Ref Number Input&quot;)]" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="Throw_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Throw>
      </If.Then>
    </If>
    <Sequence DisplayName="Get Transaction Data - Specific NE Ref" sap:VirtualizedContainerService.HintSize="1072,3298.8" sap2010:WorkflowViewState.IdRef="Sequence_97">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strAssignedTo" />
        <Variable x:TypeArguments="x:String" Name="strAdditionalSSSI" />
        <Variable x:TypeArguments="ss:SecureString" Name="BearerToken" />
        <Variable x:TypeArguments="x:String" Name="strSiteID" />
        <Variable x:TypeArguments="x:String" Name="strListID" />
        <Variable x:TypeArguments="sd:DataTable" Name="datListItems" />
        <Variable x:TypeArguments="x:String" Name="strItemID" />
        <Variable x:TypeArguments="njl:JObject" Name="JObjectListItem" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <da:Get_Bearer_Token DisplayName="Get Bearer Token" sap:VirtualizedContainerService.HintSize="1010,244.4" sap2010:WorkflowViewState.IdRef="Get_Bearer_Token_1" in_strClientID="[(New System.Net.NetworkCredential(“”, &quot;6ae6a809-3038-4f7b-9617-ef5d6d338d08&quot;)).SecurePassword]" in_strClientSecret="[(New System.Net.NetworkCredential(“”, &quot;AYZ8Q~gcRZfpZSGDergAlYd5Dc-dZIRP_SpZQckw&quot;)).SecurePassword]" in_strTenantID="[(New System.Net.NetworkCredential(&quot;&quot;, &quot;770a2450-0227-4c62-90c7-4e38537f1102&quot;)).SecurePassword]" out_strBearerToken="[BearerToken]" />
      <ds:Get_Site_ID DisplayName="Get Site ID" sap:VirtualizedContainerService.HintSize="1010,24.8" sap2010:WorkflowViewState.IdRef="Get_Site_ID_1" in_strBearerToken="[BearerToken]" in_strSite="teams/Team1356" in_strTenancy="defra.sharepoint.com" out_strSiteID="[strSiteID]" />
      <ds:Get_List_ID DisplayName="Get List ID" sap:VirtualizedContainerService.HintSize="1010,24.8" sap2010:WorkflowViewState.IdRef="Get_List_ID_1" in_strBearerToken="[BearerToken]" in_strListDisplayName="Protected Sites Tracker" in_strSiteID="[strSiteID]" out_strListID="[strListID]" />
      <ds:Get_List_Items DisplayName="Get List Item - Specific Ref" sap:VirtualizedContainerService.HintSize="1010,24.8" sap2010:WorkflowViewState.IdRef="Get_List_Items_1" in_strBearerToken="[BearerToken]" in_strColumnsNeeded="NE_x0020_Ref_x0020_Number,Team,Work_x0020_Area,DAS_x0020_Eligible,FCS_x0020_Closed_x0020_on_x0020_,Confirmation,Date_x0020_of_x0020_Confirmation,Date_x0020_Received_x0020_by_x00,Final_x0020_Response_x0020_Sent,SSSI_x0020_Response_x0020_Type,Consulting_x0020_Body_x0020_Type,Organisation_x0020_Name,Client_x0020_Name,Description,Time_x0020_Taken,Grid_x0020_Reference,SSSI_x0020_Sie_x0020_Name,Additional_x0020_SSSI_x0020_Site0,Unit_x0020_No_x002e_,Key_x0020_Notes,Reason_x0020_for_x0020_Extension,OLD_x0020__x002f__x0020_ORNEC_x0,Consent_x0020__x002f__x0020_Asse,Consultation_x0020_Type,Is_x0020_Proposal_x0020_Necessar,Likely_x0020_Significant_x0020_E,Allocated_x0020_to,Case_x0020_Work_x0020_Tracker_x0,FCS_x0020_Staff_x0020_Member,Date_x0020_closed_x0020_on_x0020,Level_x0020_of_x0020_Risk,Description_x0020_of_x0020_Exten,Robot_x0020_Status" in_strFilter="[&quot;$filter=fields/NE_x0020_Ref_x0020_Number eq '&quot;+strNERefNo+&quot;'&quot;]" in_strListID="[strListID]" in_strSiteID="[strSiteID]" out_dtaListItems="[datListItems]" />
      <ds:Get_List_Item_ID DisplayName="Get List Item ID" sap:VirtualizedContainerService.HintSize="1010,24.8" sap2010:WorkflowViewState.IdRef="Get_List_Item_ID_1" in_strBearerToken="[BearerToken]" in_strFilter="[&quot;fields/NE_x0020_Ref_x0020_Number eq '&quot;+strNERefNo+&quot;'&quot;]" in_strListID="[strListID]" in_strSiteID="[strSiteID]" out_strItemID="[strItemID]" />
      <ui:MultipleAssign DisplayName="Multiple Assign - Update - In Progress" sap:VirtualizedContainerService.HintSize="1010,180" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JObject">[JObjectListItem]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JObject">[new JObject]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JObjectListItem("fields")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">[new JObject]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="njl:JToken">[JObjectListItem("fields")("Robot_x0020_Status")]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="njl:JToken">["In Progress"]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <If Condition="[io_config(&quot;Tenancy&quot;).ToString=&quot;Dev&quot;]" DisplayName="If Tenancy is Dev" sap:VirtualizedContainerService.HintSize="1010,221.6" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Else>
          <ds:Edit_Sharepoint_List_Item DisplayName="Edit Sharepoint List Item - In Progress" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="Edit_Sharepoint_List_Item_1" in_strBearerToken="[BearerToken]" in_strBody="[JObjectListItem]" in_strItemID="[strItemID]" in_strListID="[strListID]" in_strSiteID="[strSiteID]" />
        </If.Else>
      </If>
      <Assign DisplayName="Initialise Transaction Item" sap:VirtualizedContainerService.HintSize="1010,82.4" sap2010:WorkflowViewState.IdRef="Assign_117">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_TransactionItem]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new dictionary (of string, object)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[datListItems]" DisplayName="For Each Row in Extracted Data" sap:VirtualizedContainerService.HintSize="1010,437.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="531.6,320" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[datListItems.Columns]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_100">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Add item to Transaction Data Dictionary" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_118">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[out_TransactionItem(currentItem.tostring)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[CurrentRow(currentItem.tostring)]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each item in LookupValue Regex:" sap:VirtualizedContainerService.HintSize="1010,481.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[system.text.regularexpressions.regex.matches(out_TransactionItem(&quot;Allocated_x0020_to&quot;).ToString,&quot;(?&lt;=&quot;&quot;LookupValue&quot;&quot;: &quot;&quot;).*?(?=&quot;&quot;)&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="974.4,355.2" sap2010:WorkflowViewState.IdRef="Sequence_101">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[strAssignedTo is Nothing or strAssignedTo=&quot;&quot;]" DisplayName="If AssignedTo String is Nothing" sap:VirtualizedContainerService.HintSize="912.4,244" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Assign DisplayName="Assign Item" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_119">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strAssignedTo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Assign ; + Item" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_120">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strAssignedTo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strassignedTo+";"+item.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <Assign DisplayName="Update Dictionary - Assigned To" sap:VirtualizedContainerService.HintSize="1010,82.4" sap2010:WorkflowViewState.IdRef="Assign_121">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[out_TransactionItem("Allocated_x0020_to")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[strAssignedTo]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each item in Additional SSSI Regex:" sap:VirtualizedContainerService.HintSize="1010,481.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[system.text.regularexpressions.regex.matches(out_TransactionItem(&quot;Additional_x0020_SSSI_x0020_Site0&quot;).ToString,&quot;(?&lt;=&quot;&quot;LookupValue&quot;&quot;: &quot;&quot;).*?(?=&quot;&quot;)&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="974.4,355.2" sap2010:WorkflowViewState.IdRef="Sequence_102">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[strAdditionalSSSI is Nothing or strAdditionalSSSI=&quot;&quot;]" DisplayName="If AdditionalSSSI String is nothing" sap:VirtualizedContainerService.HintSize="912.4,244" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <Assign DisplayName="Assign Item - Additional SSSI" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_122">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strAdditionalSSSI]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Assign ; + Item - SSSI" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_123">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strAdditionalSSSI]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strAdditionalSSSI+";"+item.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <If Condition="[strAdditionalSSSI is Nothing or strAdditionalSSSI=&quot;&quot;]" DisplayName="If Additional SSSI is Nothing" sap:VirtualizedContainerService.HintSize="1010,274.4" sap2010:WorkflowViewState.IdRef="If_8">
        <If.Then>
          <Assign DisplayName="Assign Additional SSSI" sap:VirtualizedContainerService.HintSize="434,82.4" sap2010:WorkflowViewState.IdRef="Assign_125">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strAdditionalSSSI]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
      <Assign DisplayName="Update Dictionary - Additional SSSI" sap:VirtualizedContainerService.HintSize="1010,82.4" sap2010:WorkflowViewState.IdRef="Assign_124">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[out_TransactionItem("Additional_x0020_SSSI_x0020_Site0")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[strAdditionalSSSI]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
  </Sequence>
</Activity>